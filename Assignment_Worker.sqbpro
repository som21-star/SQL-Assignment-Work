<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="E:/BA-ineuron/SQL/Worker.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1097"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainWorker"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CLONE" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="87"/><column index="3" value="84"/><column index="4" value="61"/><column index="5" value="129"/><column index="6" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Worker" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="87"/><column index="3" value="84"/><column index="4" value="61"/><column index="5" value="129"/><column index="6" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--Write an SQL query to fetch “FIRST_NAME” from Worker table using the alias
--name as WORKER_NAME
SELECT FIRST_NAME AS WORKER_NAME
FROM Worker;</sql><sql name="SQL 2">--Write an SQL query to fetch unique values of DEPARTMENT from Worker table
SELECT DISTINCT DEPARTMENT
FROM Worker;</sql><sql name="SQL 3">--Write an SQL query to show the last 5 record from a table
SELECT *
FROM Worker
ORDER BY Worker_ID DESC
LIMIT 5;</sql><sql name="SQL 4">--Write an SQL query to print the first three characters of  FIRST_NAME from Worker table
SELECT substr(FIRST_NAME,1,3)
FROM Worker;</sql><sql name="SQL 5">--Write an SQL query to determine the nth (say n=5) highest salary from a table.
WITH CT AS(
           SELECT FIRST_NAME, LAST_NAME, SALARY, dense_rank() OVER(ORDER BY SALARY DESC) AS Rank
           FROM Worker
          )
SELECT * FROM CT WHERE RANK = 5;</sql><sql name="SQL 6">--Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from Worker table
SELECT instr('Amitabh','a') AS position</sql><sql name="SQL 7">--Write an SQL query to print the name of employees having the highest salary in each department.
SELECT DEPARTMENT,max(SALARY) AS SAL
FROM Worker
GROUP BY DEPARTMENT;</sql><sql name="SQL 8">--Write an SQL query to print the FIRST_NAME from Worker table after removing white spaces from the right side.
SELECT rtrim(FIRST_NAME) AS right_trimmed
FROM Worker;</sql><sql name="SQL 9">--Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length.
SELECT DISTINCT DEPARTMENT, length(DEPARTMENT) AS len
FROM Worker;</sql><sql name="SQL 10">--Write an SQL query to fetch nth max salaries from a table
SELECT FIRST_NAME, LAST_NAME, SALARY, dense_rank() OVER(ORDER BY SALARY DESC) AS Rank
FROM Worker
LIMIT 5;</sql><sql name="SQL 11">--Write an SQL query to print the FIRST_NAME from Worker table after replacing ‘a’ with ‘A’
SELECT replace(FIRST_NAME,'a','A') AS replaced
FROM Worker;</sql><sql name="SQL 12">--Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
SELECT *
FROM Worker
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;</sql><sql name="SQL 13">--Write an SQL query to fetch the names of workers who earn the highest salary.
SELECT FIRST_NAME, LAST_NAME, max(SALARY) AS SAL, DEPARTMENT
FROM Worker
GROUP BY DEPARTMENT;</sql><sql name="SQL 14">--Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.
SELECT *
FROM Worker
WHERE FIRST_NAME NOT IN(&quot;Vipul&quot;,&quot;Satish&quot;);</sql><sql name="SQL 15">--Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
SELECT FIRST_NAME
FROM Worker
WHERE substr(FIRST_NAME,LENGTH(FIRST_NAME))='h' AND length(FIRST_NAME)=6;</sql><sql name="SQL 16">--Write a query to validate Email of Employee.
SELECT *
FROM table_name
WHERE email NOT IN &quot;%_@__%.__%&quot;
</sql><sql name="SQL 17">--Write an SQL query to print details of the Workers who have joined in Feb’2014.
SELECT *
FROM Worker
WHERE strftime('%Y',JOINING_DATE)='2014' AND strftime('%m',JOINING_DATE)='02';</sql><sql name="SQL 18">--Write an SQL query to fetch duplicate records having matching data in some fields of a table.
SELECT DEPARTMENT, JOINING_DATE, COUNT(*) AS count
FROM Worker
GROUP BY DEPARTMENT, JOINING_DATE
HAVING COUNT(*)&gt;1;</sql><sql name="SQL 19">--How to remove duplicate rows from Employees table.
WITH CT AS(
           SELECT DEPARTMENT, JOINING_DATE,WORKER_ID,FIRST_NAME, LAST_NAME,SALARY, JOINING_DATE, DEPARTMENT,
		   ROW_NUMBER()OVER(PARTTION BY DEPARTMENT ORDER BY SALARY DESC) AS RN
           FROM Worker
		   )
DELETE FROM CT WHERE RN &gt; 1;</sql><sql name="SQL 20">--Write an SQL query to show only odd rows from a table.
--select *
--from (select FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT from Worker group by DEPARTMENT)
--where  mod(SALARY, 2) &lt;&gt; 0;
select *
from
(
SELECT *, ROW_NUMBER() OVER(ORDER BY WORKER_ID) AS rownumber
FROM Worker
) AS Worker
where Worker.RowNumber % 2 = 1;</sql><sql name="SQL 21">--Write an SQL query to clone a new table from another table.
--INSERT INTO CLONE
CREATE TABLE CLONE AS SELECT * FROM Worker;</sql><sql name="SQL 22">----Write an SQL query to show only even rows from a table.
select *
from
(
SELECT *, ROW_NUMBER() OVER(ORDER BY WORKER_ID) AS rownumber
FROM Worker
) AS Worker
where Worker.RowNumber % 2 = 0;</sql><sql name="SQL 23">--Write an SQL query to fetch intersecting records of two tables
SELECT *
FROM Worker AS w
JOIN CLONE AS c
ON w.WORKER_ID = c.WORKER_ID
LIMIT 9;</sql><sql name="SQL 24">--Write an SQL query to show records from one table that another table does not have
SELECT *
FROM Worker AS w
WHERE NOT EXISTS (SELECT * FROM CLONE AS c WHERE w.WORKER_ID=c.WORKER_ID);</sql><sql name="SQL 25">--Write an SQL query to show the top n (say 10) records of a table
SELECT *
FROM Worker
LIMIT 10;</sql><sql name="SQL 26">--Write an SQL query to determine the nth (say n=5) highest salary from a table
WITH T AS(SELECT * dense_rank() OVER(ORDER BY SALARY DESC) AS Rank
from Worker)
SELECT *
FROM T
WHERE Rank=5;</sql><sql name="SQL 27">--Write an SQL query to determine the 5th highest salary without using TOP or limit method
WITH T AS(SELECT * dense_rank() OVER(ORDER BY SALARY DESC) AS Rank
from Worker)
SELECT *
FROM T
WHERE Rank=5;</sql><sql name="SQL 28">--Write an SQL query to fetch the list of employees with the same salary.
SELECT a.*
FROM Worker AS a
JOIN (SELECT WORKER_ID, FIRST_NAME, DEPARTMENT, SALARY
FROM Worker 
GROUP BY DEPARTMENT
HAVING count(*) &gt; 1 ) AS b
ON a.WORKER_ID = b.WORKER_ID;</sql><current_tab id="27"/></tab_sql></sqlb_project>
